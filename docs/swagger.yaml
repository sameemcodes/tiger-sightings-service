basePath: /
definitions:
  models.Tiger:
    properties:
      date_of_birth:
        type: string
      last_seen_coordinates_lat:
        type: number
      last_seen_coordinates_lon:
        type: number
      last_seen_timestamp:
        type: string
      name:
        type: string
      tiger_id:
        type: string
    type: object
  models.TigerSightingData:
    properties:
      latitude:
        type: number
      longitude:
        type: number
      sighting_id:
        type: string
      sighting_image:
        type: string
      tiger_id:
        type: string
      timestamp:
        type: string
      user_id:
        type: string
    type: object
  models.User:
    properties:
      email:
        type: string
      password:
        type: string
      user_id:
        type: string
      user_name:
        type: string
    type: object
info:
  contact:
    email: mmmohamedsameem@gmail.com
    name: Mohamed Sameem
  description: Tiggerhall-Kittens
  title: tiggerhall-kittens
  version: "1.0"
paths:
  /health:
    get:
      consumes:
      - '*/*'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Show the status of server.
      tags:
      - Health-Controller
  /tiger/v1/checkIfTigerExists/{tigerId}:
    get:
      consumes:
      - '*/*'
      parameters:
      - description: tigerId
        in: path
        name: tigerId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Check if a tiger exists by tigerId
      tags:
      - Tiger-Controller
  /tiger/v1/create_new:
    post:
      consumes:
      - '*/*'
      parameters:
      - description: Tiger body with timestamp format yyyy-mm-dd HH:ii:ss
        in: body
        name: tiger
        required: true
        schema:
          $ref: '#/definitions/models.Tiger'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Create a new tiger
      tags:
      - Tiger-Controller
  /tiger/v1/deletebyTigerId/{tigerId}:
    delete:
      consumes:
      - '*/*'
      parameters:
      - description: tigerId
        in: path
        name: tigerId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete a tiger by tigerId
      tags:
      - Tiger-Controller
  /tiger/v1/fetch_all:
    get:
      consumes:
      - '*/*'
      parameters:
      - description: offset
        in: query
        name: offset
        required: true
        type: integer
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: Get all tigers
      tags:
      - Tiger-Controller
  /tiger/v1/tiger_id/{tigerId}:
    get:
      consumes:
      - '*/*'
      parameters:
      - description: tigerId
        in: path
        name: tigerId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get a tiger by tigerId
      tags:
      - Tiger-Controller
  /tiger/v1/update:
    put:
      consumes:
      - '*/*'
      parameters:
      - description: Tiger
        in: body
        name: tiger
        required: true
        schema:
          $ref: '#/definitions/models.Tiger'
      produces:
      - application/json
      responses: {}
      summary: Update a tiger
      tags:
      - Tiger-Controller
  /tigerSighting/v1/create_new:
    post:
      consumes:
      - application/json
      - multipart/form-data
      parameters:
      - description: Tiger Photo
        in: formData
        name: photo
        required: true
        type: file
      - description: Latitude
        in: formData
        name: latitude
        required: true
        type: number
      - description: Longitude
        in: formData
        name: longitude
        required: true
        type: number
      - description: Sighting ID
        in: formData
        name: sighting_id
        required: true
        type: string
      - description: Tiger ID
        in: formData
        name: tiger_id
        required: true
        type: string
      - description: User ID
        in: formData
        name: user_id
        required: true
        type: string
      - description: Timestamp Format yyyy-mm-dd hh:mm:ss
        in: formData
        name: timestamp
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Create a new tiger sighting
      tags:
      - TigerSighting-Controller
  /tigerSighting/v1/deletebySightingId/{sightingId}:
    delete:
      consumes:
      - '*/*'
      parameters:
      - description: sightingId
        in: path
        name: sightingId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete a tiger sighting by sightingId
      tags:
      - TigerSighting-Controller
  /tigerSighting/v1/fetch_all:
    get:
      consumes:
      - '*/*'
      parameters:
      - description: offset
        in: query
        name: offset
        required: true
        type: integer
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: Get all tiger sightings
      tags:
      - TigerSighting-Controller
  /tigerSighting/v1/sighting_id/{sightingId}:
    get:
      consumes:
      - '*/*'
      parameters:
      - description: sightingId
        in: path
        name: sightingId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get a tiger sighting by sightingId
      tags:
      - TigerSighting-Controller
  /tigerSighting/v1/tiger_id/{tigerId}:
    get:
      consumes:
      - '*/*'
      parameters:
      - description: tigerId
        in: path
        name: tigerId
        required: true
        type: string
      - description: offset
        in: query
        name: offset
        required: true
        type: integer
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: Get all tiger sightings for a tiger
      tags:
      - TigerSighting-Controller
  /tigerSighting/v1/update:
    put:
      consumes:
      - '*/*'
      parameters:
      - description: TigerSightingData
        in: body
        name: sightingData
        required: true
        schema:
          $ref: '#/definitions/models.TigerSightingData'
      produces:
      - application/json
      responses: {}
      summary: Update a tiger sighting
      tags:
      - TigerSighting-Controller
  /tigerSighting/v1/user_sightings/{tigerId}:
    get:
      consumes:
      - '*/*'
      parameters:
      - description: tigerId
        in: path
        name: tigerId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get all user sightings for a tiger
      tags:
      - TigerSighting-Controller
  /user/v1/create_new:
    post:
      consumes:
      - '*/*'
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      - description: userId
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Create a new user
      tags:
      - User-Controller
  /user/v1/deletebyUserId/{userId}:
    delete:
      consumes:
      - '*/*'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete a user by userId
      tags:
      - User-Controller
  /user/v1/fetch_all:
    get:
      consumes:
      - '*/*'
      produces:
      - application/json
      responses: {}
      summary: Get all users
      tags:
      - User-Controller
  /user/v1/update:
    put:
      consumes:
      - '*/*'
      parameters:
      - description: userId
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Update a user
      tags:
      - User-Controller
  /user/v1/user_id/{userId}:
    get:
      consumes:
      - '*/*'
      parameters:
      - description: userId
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get a user by userId
      tags:
      - User-Controller
swagger: "2.0"
